/* eslint-disable */
/*Generated by GenDocu.com*/
// source: relay/processing/v1/paymentmethods/expressbank.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData', null, global);
goog.exportSymbol('proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData', null, global);
goog.exportSymbol('proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData', null, global);
goog.exportSymbol('proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData', null, global);
goog.exportSymbol('proto.relay.processing.v1.paymentmethods.expressbank.RefundReasonCode', null, global);
goog.exportSymbol('proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.repeatedFields_, null);
};
goog.inherits(proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.displayName = 'proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.displayName = 'proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.displayName = 'proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.displayName = 'proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.displayName = 'proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentFlowData: (f = msg.getPaymentFlowData()) && proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.toObject(includeInstance, f),
    itemsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData;
  return proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData;
      reader.readMessage(value,proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.deserializeBinaryFromReader);
      msg.setPaymentFlowData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentFlowData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.serializeBinaryToWriter
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional PaymentFlowRedirectRequestData payment_flow_data = 1;
 * @return {?proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.getPaymentFlowData = function() {
  return /** @type{?proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData} */ (
    jspb.Message.getWrapperField(this, proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData, 1));
};


/**
 * @param {?proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData|undefined} value
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData} returns this
*/
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.setPaymentFlowData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.clearPaymentFlowData = function() {
  return this.setPaymentFlowData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.hasPaymentFlowData = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string items = 2;
 * @return {!Array<string>}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.getItemsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.setItemsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.addItems = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeRequestData.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    paymentFlowData: (f = msg.getPaymentFlowData()) && proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData;
  return proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData;
      reader.readMessage(value,proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.deserializeBinaryFromReader);
      msg.setPaymentFlowData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaymentFlowData();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.serializeBinaryToWriter
    );
  }
};


/**
 * optional PaymentFlowRedirectResponseData payment_flow_data = 1;
 * @return {?proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.prototype.getPaymentFlowData = function() {
  return /** @type{?proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData} */ (
    jspb.Message.getWrapperField(this, proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData, 1));
};


/**
 * @param {?proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData|undefined} value
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData} returns this
*/
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.prototype.setPaymentFlowData = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.prototype.clearPaymentFlowData = function() {
  return this.setPaymentFlowData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relay.processing.v1.paymentmethods.expressbank.AuthorizeResponseData.prototype.hasPaymentFlowData = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.toObject = function(includeInstance, msg) {
  var f, obj = {
    approvalUrl: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData;
  return proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApprovalUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApprovalUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string approval_url = 1;
 * @return {string}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.prototype.getApprovalUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectResponseData.prototype.setApprovalUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.toObject = function(includeInstance, msg) {
  var f, obj = {
    reasonCode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData;
  return proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.relay.processing.v1.paymentmethods.expressbank.RefundReasonCode} */ (reader.readEnum());
      msg.setReasonCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReasonCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional RefundReasonCode reason_code = 1;
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.RefundReasonCode}
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.prototype.getReasonCode = function() {
  return /** @type {!proto.relay.processing.v1.paymentmethods.expressbank.RefundReasonCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.RefundReasonCode} value
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundRequestData.prototype.setReasonCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.prototype.toObject = function(opt_includeInstance) {
  return proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.toObject = function(includeInstance, msg) {
  var f, obj = {
    successUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    failedUrl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData;
  return proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuccessUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailedUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFailedUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string success_url = 1;
 * @return {string}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.prototype.getSuccessUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.prototype.setSuccessUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string failed_url = 2;
 * @return {string}
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.prototype.getFailedUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData} returns this
 */
proto.relay.processing.v1.paymentmethods.expressbank.PaymentFlowRedirectRequestData.prototype.setFailedUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.relay.processing.v1.paymentmethods.expressbank.RefundReasonCode = {
  DEFECT_IN_PRODUCT: 0,
  CUSTOMER_CHANGED_HIS_MIND: 1,
  PRODUCT_RECALLED: 2,
  TECHNICAL_OR_HUMAN_ERROR: 3
};

goog.object.extend(exports, proto.relay.processing.v1.paymentmethods.expressbank);
